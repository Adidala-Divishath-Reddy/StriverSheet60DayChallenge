/************************************************************

    Following is the TreeNode class structure.

    template <typename T>
    class TreeNode {
        public:
        T data;
        TreeNode<T> *left;
        TreeNode<T> *right;

        TreeNode(T data) {
            this->data = data;
            left = NULL;
            right = NULL;
        }
    };

************************************************************/

TreeNode<int> *flattenBinaryTree(TreeNode<int> *root)
{
    // Write your code here.
    if(!root)
        return NULL;
    if(!root->left && !root->right)
        return root;
    TreeNode<int> * left = flattenBinaryTree(root->left);
    TreeNode<int> * right = flattenBinaryTree(root->right);
//     O   
//    / \       We are making this as , 1st left subtree and right subtree will
//   O    O     be flattened.Then root will point to head of flattened LST.
//  /      \    Then Last node of flattened LST will point to head of flattened
// O        O   RST.
    if(left){
    TreeNode<int> * temp = root->right;
    root->right = left;
    while(left->right)
        left = left->right;
    left->right = temp;
    }
    else
        root->right = right;
    return root;
}
