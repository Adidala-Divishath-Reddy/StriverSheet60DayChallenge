#include<algorithm>
#include<set>
vector<vector<int>> ans; 
void fnc(vector<int> &num,int index,  vector<int> &temp, int SubsetSum, int k){
        if(SubsetSum == k){
        //inserting vector into array so that already if that vector is present as other subset, it will not count that.

            ans.push_back(temp);
        
        
        return ;
    }
    //for every element we will have two options. Either we can include it or not include it.
        for(int i= index; i<num.size(); i++){
            if(i>index && num[i-1] ==  num[i])//to avoid duplicate entries [1,2,5], [1,2,5] from input having [1,1,2,5]. So, for 1st '1' this condition will be failed. But for second '1' i>index will be true, So continue will be called.
                continue;
            if(num[i] > k)
                break;
            temp.push_back(num[i]);
            fnc(num, i+1, temp, SubsetSum + num[i], k);
            temp.pop_back();
        }
            
    
}
vector<vector<int>> combinationSum2(vector<int> &num, int n, int target)
{
	// Write your code here.
    vector<int> temp;
    ans.clear();
    sort(num.begin(), num.end());
    fnc(num,0,temp, 0, target);
    return ans;
}
