#include<algorithm>
bool comp(pair<int,int> &a, pair<int,int> &b){
    return a.second < b.second;
}
int maximumActivities(vector<int> &start, vector<int> &finish) {
    // Write your code here.
    vector<pair<int,int>> intervals(start.size());
    int ans=1;
    for(int i=0; i<start.size(); i++)
        intervals[i] = {start[i],finish[i]};
    sort(intervals.begin(), intervals.end(),comp);
//         for(auto i: intervals)
//             cout<<i[0]<<" "<<i[1]<<endl;
//         cout<<endl;
        int pointer_last= intervals[0].second;
    
        for(int i=1; i<intervals.size(); i++){
            if(intervals[i].first >= pointer_last)
            {
                ans++;
                pointer_last=intervals[i].second;
            }
        }
        return ans;
        (OR)
//     vector<pair<int,int>> temp;

//     for(int i=0;i<start.size();i++)

//         temp.push_back({finish[i],start[i]});

//     sort(temp.begin(),temp.end());

//     int act=1;

//     int j=0;

//     for(int i=1;i<temp.size();i++)

//     {

//         if(temp[i].second>=temp[j].first)

//         {

//             act++;

//             j=i;

//         }

//     }

//     return act;
}
