/************************************************************
    Following is the Binary Search Tree node structure
    
    template <typename T>
    class TreeNode {
        public :
        T data;
        TreeNode<T> *left;
        TreeNode<T> *right;

        TreeNode(T data) {
            this -> data = data;
            left = NULL;
            right = NULL;
        }

        ~TreeNode() {
            if(left)
                delete left;
            if(right)
                delete right;
        }
    };

************************************************************/

TreeNode<int>* LCAinaBST(TreeNode<int>* root, TreeNode<int>* P, TreeNode<int>* Q)
{
	// Write your code here
    if(root){
    TreeNode<int>* temp = root,*low,*high;
    if(P->data < Q->data){
        high = Q;
        low = P;
    }
    else if(P->data > Q->data)
    {
        low = Q;
        high = P;
    }
    else
        return P;
    while(temp){
        if(low == temp || high == temp)
            return temp;
        else if(low->data < temp->data && temp->data < high->data)
            return temp;
        else if(low->data < temp->data && high->data < temp->data)
            temp = temp->left;
        else 
            temp = temp->right;
            
    }
    }
    return NULL;
}
