#include <bits/stdc++.h> 
#include<cmath>
int Merge(vector < int > & nums, int low, int mid, int high) {
    int numPairs = 0;
    int i,j = mid+1;
    for(i=low; i<=mid; i++){
        while(j<=high && nums[i] > 2LL * nums[j])
            j++;
        numPairs += j - (mid+1);
    }
    vector<int> temp;
    i = low, j = mid+1;
    while(i <= mid && j<=high){
        if(nums[i] < nums[j]){
            temp.push_back(nums[i]);
            i++;
        }
        else{
            temp.push_back(nums[j]);
            j++;
        }
    }
    while(i<=mid){
            temp.push_back(nums[i]);
            i++;
        }
    while(j <= high){
            temp.push_back(nums[j]);
            j++;
        }
    
    for(int i=low; i<=high; i++)
        nums[i] = temp[i-low];
     
    return numPairs;
}
int MergeSort(vector<int> &arr, int low, int high){
    if(low >= high) return 0;
    int ans = 0, mid = low + (high-low)/2;
    ans += MergeSort(arr, low, mid);
    ans += MergeSort(arr, mid+1, high);
    ans += Merge(arr, low, mid, high);
    return ans;
}
int reversePairs(vector<int> &arr, int n){
	// Write your code here.
    
    return MergeSort(arr, 0, n - 1);
}
