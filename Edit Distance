#include<bits/stdc++.h>
vector<vector<int>> dp;
    int find(string &word1, string &word2,int i1,int i2){
        if(i1>=word1.length())
            return word2.length()-i2;
        else if(i2>=word2.length())
            return word1.length()-i1;
        else{
            if(dp[i1][i2]!=-1)
                return dp[i1][i2];
    if(word1[i1]==word2[i2])
        dp[i1][i2]= find(word1,word2,i1+1,i2+1);
    else{
        dp[i1][i2] = min(1+find(word1,word2,i1+1,i2), min(1+find(word1,word2,i1+1,i2+1),1+find(word1,word2,i1,i2+1)));       
    }
}
        return dp[i1][i2];
}
int editDistance(string word1, string word2)
{
    //write you code here
    if(word1.length() == 0)
            return word2.length();
        else if(word2.length() == 0)
            return word1.length();
        dp = vector<vector<int>>(word1.length(),vector<int>(word2.length(),-1));
        find(word1,word2,0,0);
        return dp[0][0];
}
